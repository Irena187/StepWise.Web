@using StepWise.Data.Models
@model StepWise.Data.Models.CareerPath

@{
    ViewData["Title"] = Model.Title;
}

<div class="container">
    <div class="row">
        <div class="col-12">
            <!-- Header Section -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">@Model.Title</h2>
                    <p class="text-muted mb-0">
                        <i class="fas fa-bullseye me-1"></i>
                        Goal: <strong>@Model.GoalProfession</strong>
                    </p>
                </div>
                <div>
                    @if (Model.IsPublic)
                    {
                        <span class="badge bg-success fs-6">
                            <i class="fas fa-globe me-1"></i>Public
                        </span>
                    }
                    else
                    {
                        <span class="badge bg-secondary fs-6">
                            <i class="fas fa-lock me-1"></i>Private
                        </span>
                    }
                </div>
            </div>

            <!-- Description Section -->
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-info-circle me-2"></i>
                            Description
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Model.Description</p>
                    </div>
                </div>
            }

            <!-- Career Steps Section -->
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-list-ol me-2"></i>
                        Career Steps (@(Model.Steps?.Count ?? 0))
                    </h5>
                    <a href="#" class="btn btn-sm btn-outline-primary">
                        <i class="fas fa-plus me-1"></i>Add Step
                    </a>
                </div>
                <div class="card-body">
                    @if (Model.Steps != null && Model.Steps.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var step in Model.Steps)
                            {
                                <div class="list-group-item border-0 px-0">
                                    <div class="row align-items-center">
                                        <div class="col-1">
                                            @if (step.IsCompleted)
                                            {
                                                <i class="fas fa-check-circle text-success fs-4"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-circle text-muted fs-4"></i>
                                            }
                                        </div>
                                        <div class="col-11">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div class="flex-grow-1">
                                                    <h6 class="mb-1 @(step.IsCompleted ? "text-decoration-line-through text-muted" : "")">
                                                        @step.Title
                                                    </h6>
                                                    @if (!string.IsNullOrEmpty(step.Description))
                                                    {
                                                        <p class="mb-2 text-muted small">@step.Description</p>
                                                    }
                                                    <div class="d-flex flex-wrap gap-2 align-items-center">
                                                        <!-- Step Type Badge -->
                                                        <span class="badge @GetStepTypeBadgeClass(step.Type)">
                                                            @GetStepTypeIcon(step.Type) @step.Type
                                                        </span>

                                                        <!-- Deadline -->
                                                        @if (step.Deadline.HasValue)
                                                        {
                                                            var isOverdue = step.Deadline.Value < DateTime.Now && !step.IsCompleted;
                                                            <span class="badge @(isOverdue ? "bg-danger" : "bg-info")">
                                                                <i class="fas fa-calendar-alt me-1"></i>
                                                                @step.Deadline.Value.ToString("MMM dd, yyyy")
                                                            </span>
                                                        }

                                                        <!-- URL Link -->
                                                        @if (!string.IsNullOrEmpty(step.Url))
                                                        {
                                                            <a href="@step.Url" target="_blank" class="btn btn-sm btn-outline-primary">
                                                                <i class="fas fa-external-link-alt me-1"></i>Visit
                                                            </a>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="dropdown">
                                                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li>
                                                            <a class="dropdown-item" href="#">
                                                                <i class="fas fa-edit me-2"></i>Edit
                                                            </a>
                                                        </li>
                                                        <li>
                                                            <a class="dropdown-item" href="#" onclick="toggleStepCompletion('@step.Id')">
                                                                <i class="fas fa-@(step.IsCompleted ? "times" : "check") me-2"></i>
                                                                Mark as @(step.IsCompleted ? "Incomplete" : "Complete")
                                                            </a>
                                                        </li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li>
                                                            <a class="dropdown-item text-danger" href="#">
                                                                <i class="fas fa-trash me-2"></i>Delete
                                                            </a>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-clipboard-list fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Steps Added Yet</h5>
                            <p class="text-muted">Start building your career path by adding the first step!</p>
                            <a href="#" class="btn btn-primary">
                                <i class="fas fa-plus me-1"></i>Add First Step
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Progress Section -->
            @if (Model.Steps != null && Model.Steps.Any())
            {
                var completedSteps = Model.Steps.Count(s => s.IsCompleted);
                var totalSteps = Model.Steps.Count;
                var progressPercentage = totalSteps > 0 ? (completedSteps * 100 / totalSteps) : 0;

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-chart-line me-2"></i>
                            Progress
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>@completedSteps of @totalSteps steps completed</span>
                            <span class="fw-bold">@progressPercentage%</span>
                        </div>
                        <div class="progress" style="height: 10px;">
                            <div class="progress-bar" role="progressbar" style="width: @(progressPercentage)%"
                                 aria-valuenow="@progressPercentage" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                </div>
            }

            <!-- Creator Information -->
            @if (Model.User != null)
            {
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center me-3"
                                 style="width: 50px; height: 50px;">
                                <i class="fas fa-user text-white fs-4"></i>
                            </div>
                            <div>
                                <h6 class="mb-0">Created by</h6>
                                <p class="text-muted mb-0">@Model.User.UserName</p>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Action Buttons -->
            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Back to Career Paths
                </a>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary me-2">
                        <i class="fas fa-edit me-1"></i>Edit
                    </a>
                    <button type="button" class="btn btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                        <i class="fas fa-trash me-1"></i>Delete
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this career path?</p>
                <strong>"@Model.Title"</strong>
                <p class="text-muted mt-2">This action cannot be undone and will also delete all associated steps.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" method="post" class="d-inline">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStepTypeBadgeClass(StepType stepType)
    {
        return stepType switch
        {
            StepType.Course => "bg-primary",
            StepType.Book => "bg-success",
            StepType.Certification => "bg-warning text-dark",
            StepType.Job => "bg-info",
            StepType.Internship => "bg-secondary",
            StepType.Degree => "bg-dark",
            StepType.Documentation => "bg-light text-dark",
            StepType.Other => "bg-muted",
            _ => "bg-secondary"
        };
    }

    string GetStepTypeIcon(StepType stepType)
    {
        return stepType switch
        {
            StepType.Course => "<i class='fas fa-graduation-cap me-1'></i>",
            StepType.Book => "<i class='fas fa-book me-1'></i>",
            StepType.Certification => "<i class='fas fa-certificate me-1'></i>",
            StepType.Job => "<i class='fas fa-briefcase me-1'></i>",
            StepType.Internship => "<i class='fas fa-user-tie me-1'></i>",
            StepType.Degree => "<i class='fas fa-university me-1'></i>",
            StepType.Documentation => "<i class='fas fa-file-alt me-1'></i>",
            StepType.Other => "<i class='fas fa-star me-1'></i>",
            _ => "<i class='fas fa-circle me-1'></i>"
        };
    }
}

@section Scripts {
    <script>
        function toggleStepCompletion(stepId) {
            // Add AJAX call to toggle step completion
            console.log('Toggle completion for step:', stepId);
            // You can implement this functionality later
        }
    </script>
}